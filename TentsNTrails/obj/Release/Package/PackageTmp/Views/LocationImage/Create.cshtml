@model TentsNTrails.Models.LocationImageViewModel


@{
    ViewBag.Title = "Create";
}

<h2>Upload new Image</h2>
<hr />
<div class="row">
    <div align="left" class="form-horizontal col-xs-5">

        <!-- Begin form -->
        <form id="image_upload_form" action="" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <!-- Image Upload -->
            <!-- use tutorial code from http://stackoverflow.com/questions/5256620/how-can-i-show-a-image-preview-in-the-browser-without-uploading-the-image-file-t -->
            <div class="form-group">
                @Html.LabelFor(model => model.ImageUpload, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.ImageUpload, new { type = "file", @onchange = "previewImage(this)" })

                </div>
            </div>


            <!-- Location Drop-down selector -->
            <div class="form-group">
                @Html.LabelFor(model => model.LocationID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("LocationID", (IEnumerable<SelectListItem>)ViewBag.LocationID, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Title -->
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- AltText -->
            <div class="form-group">
                @Html.LabelFor(model => model.AltText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AltText, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AltText, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Date Taken -->
            <div class="form-group">
                @Html.LabelFor(model => model.DateTaken, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateTaken, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateTaken, "", new { @class = "text-danger" })
                </div>
            </div>



            <!-- Submit Button -->
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Upload" class="btn btn-default" />

                    <!-- Cancel upload button-->
                    <a class="btn btn-default" href="location.href='@Url.Action((string)ViewBag.CancelAction, "Location")'" role="button">
                        Cancel
                    </a>
                </div>
            </div>

        </form>

        @Html.ActionLink("Cancel upload", (string)ViewBag.CancelAction, "Location")


        <!-- Dynamic cancel link based on if a LocationID was specified, or if any can be selected.
        <div>

        </div> -->

    </div>

    <!-- Preview the Image here -->
    <div class="col-xs-7" align="left">
        <img id="imagePreview" style="max-width:100%;max-height:100%"
             src="~/Content/ImagePreview.png"
             alt="your image" />
    </div>

</div><!--End Row-->
<!-- IMAGE PREVIEW SCRIPT-->
<script type="text/javascript">
    function previewImage(input) {
        var preview = document.getElementById('imagePreview');
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                preview.setAttribute('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        } else {
            preview.setAttribute('src', '~/Content/ImagePreview.png');
        }
    }
</script>