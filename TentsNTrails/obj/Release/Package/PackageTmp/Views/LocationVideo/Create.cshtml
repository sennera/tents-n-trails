@model TentsNTrails.Models.LocationVideo

@{
    ViewBag.Title = "Create";
}

<h2>Add New Video</h2>
<h5>for @Html.ActionLink(Model.Location.Label, "Details", "Location", new { id = Model.LocationID }, null)</h5>

<div class="row">
    <div class="col-xs-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>LocationVideo</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })             

                <div class="form-group">
                    @Html.LabelFor(model => model.EmbedCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmbedCode, new { htmlAttributes = new { @class = "form-control", @onchange = "previewImage(this)", @placeholder = "<embed src=\"http...\" />"} })
                        @Html.ValidationMessageFor(model => model.EmbedCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Our hike in the woods..." } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!-- Location Hidden Field -->
                @Html.HiddenFor(model => model.LocationID)

                @*
                    <div class="form-group">
                        @Html.LabelFor(model => model.LocationID, "LocationID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("LocationID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                *@

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                        
                        <!-- Cancel upload button-->
                        <a class="btn btn-default" href="@Url.Action("Media", "Location", new { locationID = Model.LocationID })" role="button">
                            Cancel
                        </a>
                    </div>                    
                </div>
            </div>
        }
    </div>
</div>

<!-- VIDEO -->
<div class="row">
    <div class="col-lg-8 col-md-8 col-sm-12">
        <div id="video-preview" class="video-container">
            @Html.Raw(Model.EmbedCode)
        </div>
    </div>
</div>

<!-- SCRIPT -->
<script type="text/javascript">
    function previewImage(input) {
        var preview = document.getElementById('video-preview');
        preview.innerHTML = input.value;
    };
</script>