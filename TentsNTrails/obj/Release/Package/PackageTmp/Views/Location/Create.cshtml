@model TentsNTrails.Models.CreateLocationViewModel

<!-- Google Maps Scripting -->
<script src="http://maps.googleapis.com/maps/api/js"></script>
<script>
    // Initialize the Map details.
    function initialize() {

        // make a new LatLong for the report's location
        var centerLatitude = 39.8282;
        var centerLongitude = -98.5795;
        var reportLocation = new google.maps.LatLng(centerLatitude, centerLongitude);

        // initialize map properties
        var mapProp = {
            center: reportLocation,
            zoom: 3,
            mapTypeId: google.maps.MapTypeId.ROADMAP // types include ROADMAP, SATELLITE, HYBRID, and TERRAIN
        };

        // get the map
        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        var marker;

        // add click listener
        google.maps.event.addListener(map, 'click', function (event) {
            placeMarker(event.latLng);
            var form = document.forms['createForm'];
            form.elements["Latitude"].value = event.latLng.lat();
            form.elements["Longitude"].value = event.latLng.lng();
            //Console.log("Hello, world!");

        });

        function placeMarker(location) {
            // remove old marker
            if (marker != null || marker != undefined)
            {
                marker.setMap(null);
            }
            //  add a new marker
            marker = new google.maps.Marker({
                position: location,
                map: map,
            });

            // remove the current marker if it is there
            

            var infowindow = new google.maps.InfoWindow({
                content: 'Latitude: ' + location.lat() +
                '<br>Longitude: ' + location.lng()
            });
            infowindow.open(map,marker);
        }
        
    }

    // display the map
    google.maps.event.addDomListener(window, 'load', initialize);
</script>

@{
    ViewBag.Title = "Add a Location";
}

<h2>Add Location</h2>


<div class=" = row">
<div class="col-xs-6"> <!-- actionName, controllerName -->
@using (Html.BeginForm("Create", "Location", FormMethod.Post, new { id = "createForm" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Label, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Label, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Label, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Difficulty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Difficulty)
            </div>
        </div>

        @for (int i = 0; i < Model.RecOptions.Count; i++ )
        {
        @Html.HiddenFor(m => m.RecOptions[i].RecreationID)
        @Html.HiddenFor(m => m.RecOptions[i].RecreationLabel)
        <div class="form-group">
            <div class="col-md-2 control-label" style="font-weight: bold">
                @Html.DisplayFor(m => m.RecOptions[i].RecreationLabel, new { @class = "col-md-2 control-label" })
            </div>
            <div class="col-md-10">
                @Html.CheckBoxFor(m => m.RecOptions[i].IsChecked, new { @class = "form-control" })
            </div>
        </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
</div>
<div class="col-xs-6">
    <p>
        Select a location on the map to find it's coordinates:
    </p>
    <!-- The Map is displayed here -->
    <div>
        <div id="googleMap" style="width:100%;height:300px;"></div>
    </div>
</div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
