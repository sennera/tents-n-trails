@model IEnumerable<TentsNTrails.Models.Events>
@using TentsNTrails.Models
@using Microsoft.AspNet.Identity

 <!-- Google Maps Scripting -->
<script src="http://maps.googleapis.com/maps/api/js"></script>
<script src="~/Scripts/google-map-setup.js"></script>
<script>
    var addMarkers = function(map, markers) {
        @foreach (var item in Model) {
            @:console.log("latitude:" + @item.Location.Latitude + " longitude: " +  @item.Location.Longitude);
            @:var marker = new google.maps.Marker({position: new google.maps.LatLng(@item.Location.Latitude, @item.Location.Longitude), map: map});
            @:var infowindow = new google.maps.InfoWindow({content: 'Loading...'});
            @:marker.html='<div class="label"><a>@item.Name</a></div>';
            @:google.maps.event.addListener(marker, 'click', function() {infowindow.setContent(this.html); infowindow.open(map,this);});
            @:markers.push(marker);
       }
    };
    var centerLat = @ViewBag.centerLatitude;
    var centerLng = @ViewBag.centerLongitude;
    var minZoom = 9;
    var ourMap = new TntMap(centerLat,centerLng, addMarkers, minZoom);
    ourMap.create();
</script>

@{
    ViewBag.Title = "Index";
}

<h2>Events <a href="/Events/Create"><span style="color: green;"><i class="glyphicon glyphicon-plus"></i></span></a></h2>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
<p style="color: green;">
    @ViewBag.SuccessMessage
</p>

<!-- MAP -->
<div class="row" style="padding-top:15px;">
    <div class="col-xs-12">
        <div id="googleMap" style="width:100%;height:300px;"></div>
        <p></p>
    </div>
</div>

@**<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Location)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            Organizer
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink(item.Name, "Details", new { id = item.EventID })
        </td>
        <td>
            @Html.ActionLink(item.Location.Label, "Details", "Location", new { id = item.LocationID }, null)
        </td>
        <td>
            @Html.DisplayFor(e => item.Date)
        </td>
        <td>
            @Html.ActionLink(item.Organizer.UserName, "Index", "Profile", new { Username = item.Organizer.UserName }, null)
        </td>
        @if (User.IsInRole("Admin") || User.Identity.IsAuthenticated && User.Identity.GetUserName().Equals(item.Organizer.UserName))
        {
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.EventID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.EventID })
            </td>
        }
    </tr>
}

</table>**@


<!-- LOCATIONS -->
@{
    int padding = 7;
    int count = Model.Count();
    for (int i = 0; i < count; i += 2)
    {
        <div class="row" style="padding: 0px @(padding)px 0px @(padding)px">
            @for (int j = i; j < Math.Min(i + 2, count); j++)
            {
                Events item = Model.ToList()[j];
                <div class="col-xs-12 col-md-6" style="padding: @(padding)px;">
                    <div id="review" style="min-height: 124px; min-width:370px">
                        @{ Html.RenderAction("Summary", "Events", new { id = item.EventID, redirectAction = "Index", redirectController = "Events" }); }
                    </div>
                </div>
            }
        </div>
    }
}
